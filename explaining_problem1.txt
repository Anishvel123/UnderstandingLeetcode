This problem asks to find longest sub array sum.

Sub array => contiguous part of an array

Ex: [1, 3, 4, 6]

	[1, 3], [1, 3, 4], [3, 4, 6] are subarrays

	[1, 4], [1, 6], [1, 3, 6] etc are not subarrays

Approach:

	We keep track of sum till this point, and keep track of the maximum sum we were able to get up until this point.

	When the sum goes below 0 we reset it to 0.
	
	But why?
		
		take example [-2, 1, 3], at the very start there is an negative number, obviously making our subarray start from this point is not going to increase  the sum.
		
		consider the "sum till this point" that would be resetted to 0 as the start of our sub array just like the -2 in the example.

		Therefore we reset it to 0.

	At each iteration we keep track of the maximum of  "sum till this point" obviously "to find longest sub array sum".

I hope this helps understand this problem deeply and more objectively :)

